cmake_minimum_required(VERSION 3.10)

set(project_name         "libng")
set(dir_src              ${project_name})
set(dir_vcpkg            "externals/vcpkg")
set(dir_cmake            "cmake")
set(CMAKE_TOOLCHAIN_FILE "${dir_vcpkg}/scripts/buildsystems/vcpkg.cmake")

project(${project_name})

include(${dir_cmake}/compiler.cmake)
include(${dir_cmake}/vcpkg.cmake)
include(${dir_cmake}/helper.cmake)

include_directories("${dir_src}/include")
include_directories(libcxx)

OPTION(BUILD_SAMPLE    "Build Sample"    OFF)
OPTION(BUILD_TEST      "Build Test"      OFF)
OPTION(BUILD_BENCHMARK "Build Benchmark" OFF)
OPTION(BUILD_SERVER    "Build Server"    OFF)

IF(BUILD_SAMPLE)
  add_subdirectory(sample)
  add_subdirectory("${dir_src}/client")
  add_subdirectory("${dir_src}/ui")
ENDIF(BUILD_SAMPLE)

IF(BUILD_TEST)
  add_subdirectory(test)
  add_subdirectory("${dir_src}/log")
  add_subdirectory("${dir_src}/net")
  add_subdirectory("${dir_src}/process")
  add_subdirectory("${dir_src}/server")
ENDIF(BUILD_TEST)

IF(BUILD_BENCHMARK)
  add_subdirectory(benchmark)
ENDIF(BUILD_BENCHMARK)

IF(BUILD_SERVER)
  add_subdirectory("${dir_src}/concurrency")
  add_subdirectory("${dir_src}/fs")
  add_subdirectory("${dir_src}/log")
  add_subdirectory("${dir_src}/mm")
  add_subdirectory("${dir_src}/net")
  add_subdirectory("${dir_src}/process")
  add_subdirectory("${dir_src}/scheduler")
  add_subdirectory("${dir_src}/server")
  add_subdirectory("${dir_src}/synchronization")
  add_subdirectory("${dir_src}/thread")
  add_subdirectory("${dir_src}/timer")
ENDIF(BUILD_SERVER)
